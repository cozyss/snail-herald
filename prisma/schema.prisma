// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@localhost/app"
}

model User {
  id              Int       @id @default(autoincrement())
  username        String    @unique
  password        String
  isAdmin         Boolean   @default(false)
  createdAt       DateTime  @default(now())
  sentMessages    Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  featureRequests FeatureRequest[] @relation("CreatedFeatureRequests")
  featureActions  FeatureAction[]  @relation("UserFeatureActions")
}

model Message {
  id             Int      @id @default(autoincrement())
  content        String
  createdAt      DateTime @default(now())
  visibleAt      DateTime @default(now())
  isRead         Boolean  @default(false)
  isAnnouncement Boolean  @default(false)
  sender         User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId       Int
  receiver       User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId     Int
}

model DelaySetting {
  id        Int      @id @default(1)
  minDelay  Int      @default(0)
  maxDelay  Int      @default(0)
  updatedAt DateTime @default(now()) @updatedAt
}

model WelcomeTemplate {
  id        Int      @id @default(1)
  content   String   @default("Welcome to Snail Herald! We're excited to have you join our community. Take your time to explore and enjoy sending letters to others.")
  updatedAt DateTime @default(now()) @updatedAt
}

model FeatureRequest {
  id          Int             @id @default(autoincrement())
  description String
  createdAt   DateTime        @default(now())
  createdBy   User           @relation("CreatedFeatureRequests", fields: [createdById], references: [id])
  createdById Int
  actions     FeatureAction[] @relation("FeatureRequestActions")
}

model FeatureAction {
  id              Int            @id @default(autoincrement())
  type            String         // "CREATE", "UPVOTE", "DOWNVOTE"
  createdAt       DateTime       @default(now())
  user            User           @relation("UserFeatureActions", fields: [userId], references: [id])
  userId          Int
  featureRequest  FeatureRequest @relation("FeatureRequestActions", fields: [featureRequestId], references: [id])
  featureRequestId Int
}
